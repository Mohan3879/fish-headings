// Generated by LiveScript 1.4.0
(function(){
  var $, jquery, projectName, util, ref$, log, ierror, isNum, isInt, isANum, round, $main, items, numItems, $container, containerWidth, collapsedHeight, spanWidths, longestWidth, spanHeightLarge, toString$ = {}.toString;
  $ = jquery = require('./lib/jquery');
  projectName = 'fish-headings';
  ref$ = util = require('./util'), log = ref$.log, ierror = ref$.ierror, isNum = ref$.isNum, isInt = ref$.isInt, isANum = ref$.isANum, round = ref$.round;
  module.exports = {
    init: init,
    collapse: collapse
  };
  $main = void 8;
  items = [];
  numItems = -1;
  $container = void 8;
  containerWidth = -1;
  collapsedHeight = -1;
  spanWidths = [];
  longestWidth = -1;
  spanHeightLarge = void 8;
  function init($_container, vals, opts){
    var x$, $main, that;
    opts == null && (opts = {});
    $container = $_container;
    containerWidth = $container.width();
    numItems = vals.length;
    x$ = $main = $('<div>');
    x$.attr('id', projectName);
    vals.forEach(function(v, i){
      var text, href, listIconClass, x$, $item, $spanIcon, y$, $spanContents, z$, $spanText, z1$;
      if (toString$.call(v).slice(8, -1) === 'Object') {
        text = v.text, href = v.href, listIconClass = v.listIconClass;
        listIconClass == null && (listIconClass = []);
      } else {
        text = v;
        listIconClass = [];
      }
      x$ = $item = $('<div>');
      x$.attr('id', i);
      $spanIcon = $('<span>');
      listIconClass.forEach(function(it){
        return $spanIcon.addClass(it);
      });
      if (href) {
        y$ = $spanContents = $('<a>');
        y$.attr('href', href);
        y$.html(text);
        z$ = $spanText = $('<span>');
        z$.append($spanContents);
      } else {
        z1$ = $spanText = $('<span>');
        z1$.html(text);
      }
      $main.append($item);
      $item.append($spanIcon);
      $item.append($spanText);
      return items.push($item);
    });
    $container.append($main);
    return collapsedHeight = (that = opts.collapsedHeight) != null
      ? that
      : $container.height();
  }
  function collapse(n){
    var tops, lefts;
    tops = [];
    lefts = [];
    items.forEach(function($v){
      var offset, span, $span, width;
      offset = $v.position();
      tops.push(offset.top);
      lefts.push(offset.left);
      span = $v.find('span')[1];
      $span = $(span);
      width = $span.width();
      longestWidth = Math.max(width, longestWidth);
      if (spanHeightLarge == null) {
        spanHeightLarge = $span.height();
      }
      spanWidths.push(width);
      log('pushing width', $span.width());
      return log('pushing left', offset.left);
    });
    items.forEach(function($v){
      var top, left;
      top = tops.shift();
      left = lefts.shift();
      return $v.css('position', 'absolute').css('top', top).css('left', left);
    });
    return setTimeout(function(){
      return select(n);
    }, 0);
  }
  function select(n){
    var widthEnabled, j;
    widthEnabled = -1;
    items.forEach(function($v, i){
      $v.removeClass('disabled').removeClass('enabled');
      if (i === n) {
        return $v.addClass('enabled');
      } else {
        return $v.addClass('disabled');
      }
    });
    log('span-height-large', spanHeightLarge);
    j = -1;
    items.forEach(function($v, i){
      var top, spanHeightSmall;
      if (i === n) {
        $v.css('left', 0);
        top = collapsedHeight / 2 - spanHeightLarge / 2;
        return $v.css('top', top);
      } else {
        j++;
        $v.css('left', '');
        spanHeightSmall = 10;
        top = (collapsedHeight - spanHeightSmall) / (numItems - 2) * j;
        return $v.css('top', top);
      }
    });
    return $container.height(collapsedHeight);
  }
  function expand(){
    return log('no op expand');
  }
}).call(this);
